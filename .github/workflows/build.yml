name: XStream App Build and Versioning

on:
  push:
    tags: 
      - '*'

permissions:
  contents: write
  id-token: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Update Version Number
        id: versioning
        run: |
          VERSION_FILE="pubspec.yaml"
          
          # Extract the tag name from the event ref
          TAG_NAME=${GITHUB_REF#refs/tags/}
          
          # Ensure the tag is in the correct format
          if [[ ! $TAG_NAME =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            echo "Tag format is not correct. Expected format: vMAJOR.MINOR.PATCH"
            exit 1
          fi
      
          MAJOR=${BASH_REMATCH[1]}
          MINOR=${BASH_REMATCH[2]}
          PATCH=${BASH_REMATCH[3]}
          
          # Extract the current version from pubspec.yaml
          CURRENT_VERSION_LINE=$(grep -m1 "version:" $VERSION_FILE)
          CURRENT_VERSION=$(echo $CURRENT_VERSION_LINE | cut -d ' ' -f2)
          
          # Extract the current build number from the current version
          IFS='+' read -r VERSION_PART BUILD_PART <<< "$CURRENT_VERSION"
          BUILD_NUMBER=${BUILD_PART:-0}
          
          # Increment the build number
          BUILD_NUMBER=$((BUILD_NUMBER + 1))
          
          # Construct the new version name
          NEW_VERSION_NAME="$MAJOR.$MINOR.$PATCH+$BUILD_NUMBER"
      
          # Update the version in pubspec.yaml
          sed -i "s/^version: .*/version: $NEW_VERSION_NAME/g" $VERSION_FILE
          echo "Updated version to $NEW_VERSION_NAME"

          echo "NEW_VERSION=$NEW_VERSION_NAME" >> $GITHUB_ENV
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
  
      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java.outputs.java-home }}" >> $GITHUB_ENV

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'

      - name: Install Dependencies
        run: flutter pub get

      - name: Set up Keystore
        run: |
          mkdir -p ~/.android
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > ~/.android/keystore.jks
        shell: bash
      
      - name: Build APK for all ABIs
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        run: |
          flutter build apk --release --split-per-abi      
    
      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Create Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION_FILE="pubspec.yaml"
          
          # Extract the current version from pubspec.yaml
          VERSION_LINE=$(grep -m1 "version:" $VERSION_FILE)
          VERSION_NAME=$(echo $VERSION_LINE | cut -d ' ' -f2)
          
          # Extract the MAJOR, MINOR, PATCH without the build number
          IFS='+' read -r VERSION_PART BUILD_PART <<< "$VERSION_NAME"
          IFS='.' read -r -a VERSION_PARTS <<< "$VERSION_PART"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          
          SIMPLE_VERSION_NAME="$MAJOR.$MINOR.$PATCH"
          
          echo "Creating release for version $SIMPLE_VERSION_NAME"
      
          gh release create $SIMPLE_VERSION_NAME \
          build/app/outputs/apk/release/xstream-$SIMPLE_VERSION_NAME-armeabi-v7a-release.apk \
          build/app/outputs/apk/release/xstream-$SIMPLE_VERSION_NAME-arm64-v8a-release.apk \
          build/app/outputs/apk/release/xstream-$SIMPLE_VERSION_NAME-x86_64-release.apk \
          --title "Release v$SIMPLE_VERSION_NAME" \
          --notes "Download and enjoy. Happy streaming!"

      - name: Commit version change
        run: |
          git config --global user.name "Sanal M"
          git config --global user.email "SanuSanal@users.noreply.github.com"
          git add pubspec.yaml
          git commit -m "Update version to ${{ env.NEW_VERSION }}"
          git push origin HEAD:main

      - name: Delete older releases
        uses: dev-drprasad/delete-older-releases@v0.3.4
        with:
          keep_latest: 5
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        